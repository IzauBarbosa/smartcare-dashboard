{"version":3,"sources":["smartcare/services/request.js","smartcare/pages/login/Login.js"],"names":["request","method","endpoint","params","response","axios","toast","promise","pending","success","error","then","catch","Login","useState","emailState","setEmailState","passwordState","setPasswordState","loadingRequestState","setLoadingRequestState","history","useHistory","dispatch","useDispatch","handleSubmit","e","a","preventDefault","process","email","password","type","user","name","push","className","md","onSubmit","placeholder","autoComplete","onChange","value","target","required","minLength","xs","color","disabled","onClick","currentTarget","form","classList","add","to","tag","tabIndex"],"mappings":"6KAAA,iEAGaA,EAAU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAEpCC,EAAWC,IAAMJ,GAAQC,EAAUC,GAWzC,OATAG,IAAMC,QACJH,EACA,CACEI,QAAS,uBACTC,QAAS,2BACTC,MAAO,uCAIJN,EACJO,MAAK,SAAAP,GAAQ,OAAIA,KACjBQ,OAAM,SAAAF,GAAK,OAAIA,EAAMN,c,oJCiGXS,UA/FD,WAEZ,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsDJ,oBAAS,GAA/D,mBAAOK,EAAP,KAA4BC,EAA5B,KACMC,EAAUC,cACVC,EAAWC,cAQXC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAEE,iBAEFR,GAAuB,GAHJ,SAKIpB,YAAQ,CAC7BC,OAAQ,OACRC,SAAS,GAAD,OAAK2B,0BAAL,SACR1B,OAAQ,CACN2B,MAAOf,EACPgB,SAAUd,KAVK,cAgBjBM,EAAS,CAACS,KAAM,MAAOC,KAAM,CAC3BC,KAAM,OACNJ,MAAOf,KAGTM,EAAQc,KAAK,cAGff,GAAuB,GAxBJ,2CAAH,sDA2BlB,OACE,qBAAKgB,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,eAAC,IAAD,CAAYD,UAAU,sBAAtB,UACE,cAAC,IAAD,CAAOA,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOE,SAAUb,EAAjB,UACE,uCACA,mBAAGW,UAAU,aAAb,wCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAK,iBAGhB,cAAC,IAAD,CAAQF,KAAK,QAAQO,YAAY,QAAQC,aAAa,QAAQC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2B1B,EAAc0B,IAASA,MAAO3B,EAAY6B,UAAQ,OAEvJ,eAAC,IAAD,CAAaR,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAK,wBAGhB,cAAC,IAAD,CAAQF,KAAK,WAAWO,YAAY,WAAWC,aAAa,mBAAmBC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BxB,EAAiBwB,IAASA,MAAOzB,EAAe4B,UAAU,IAAID,UAAQ,OAE5L,cAAC,IAAD,UACE,cAAC,IAAD,CAAME,GAAG,KAAKV,UAAU,aAAxB,SACE,cAAC,IAAD,CAASW,MAAM,UAAUX,UAAS,eAAUjB,EAAsB,UAAY,IAAMa,KAAK,SAASgB,SAAU7B,EAAqB8B,QA9DhI,SAACvB,GAERA,EAAEwB,cAAcC,KACxBC,UAAUC,IAAI,kBA2DA,8BAMV,cAAC,IAAD,CAAOjB,UAAU,6BAAjB,SACE,cAAC,IAAD,CAAWA,UAAU,cAArB,SACE,gCACE,6CACA,0IACA,cAAC,IAAD,CAAMkB,GAAG,YAAT,SACE,cAAC,IAAD,CAASC,IAAI,OAAOR,MAAM,UAAUX,UAAU,OAAOoB,UAAW,EAAhE","file":"static/js/12.fe309712.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const request = ({ method, endpoint, params }) => {\r\n  \r\n  const response = axios[method](endpoint, params)\r\n  \r\n  toast.promise(\r\n    response,\r\n    {\r\n      pending: 'Aguardando resposta.',\r\n      success: 'Tudo certo! üëå',\r\n      error: 'Ops, algo deu errado. ü§Ø'\r\n    }\r\n  )\r\n\r\n  return response\r\n    .then(response => response)\r\n    .catch(error => error.response)\r\n}","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { request } from '../../services/request'\n\nconst Login = () => {\n\n  const [emailState, setEmailState] = useState(\"\")\n  const [passwordState, setPasswordState] = useState(\"\")\n  const [loadingRequestState, setLoadingRequestState] = useState(false)\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const handleValidate = (e) => {\n\n    const $form = e.currentTarget.form;\n    $form.classList.add(\"was-validated\");\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    \n    setLoadingRequestState(true)\n\n    const response = await request({ \n      method: \"post\", \n      endpoint: `${process.env.REACT_APP_BASE_API_URL}login`,\n      params: {\n        email: emailState,\n        password: passwordState,\n      }\n    })\n  \n    if (response || true) {\n      \n      dispatch({type: 'set', user: {\n        name: \"izau\",\n        email: emailState\n      } })\n\n      history.push(\"/dashboard\")\n    }\n\n    setLoadingRequestState(false)\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup className=\"flex-md-down-column\">\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handleSubmit}>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Fa√ßa login em sua conta</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"email\" placeholder=\"Email\" autoComplete=\"email\" onChange={({ target: { value } }) => setEmailState(value) } value={emailState} required />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" onChange={({ target: { value } }) => setPasswordState(value) } value={passwordState} minLength=\"6\" required />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"12\" className=\"text-right\">\n                        <CButton color=\"primary\" className={`px-4 ${loadingRequestState ? \"loading\" : \"\"}`} type=\"submit\" disabled={loadingRequestState} onClick={handleValidate}>Login</CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\">\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Cadastre-se</h2>\n                    <p>Cadastre-se em nosso sistema, e conte com uma tecnologia avan√ßada para o monitoramento a dist√¢ncia.</p>\n                    <Link to=\"/register\">\n                      <CButton tag=\"span\" color=\"primary\" className=\"mt-3\" tabIndex={-1}>Cadastra-se agora</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}