{"version":3,"sources":["smartcare/services/request.js","smartcare/pages/register/Register.js"],"names":["request","method","endpoint","params","response","axios","toast","promise","pending","success","error","then","catch","Register","useState","usernameState","setUsernameState","emailState","setEmailState","passwordState","setPasswordState","passwordConfirmationState","setPasswordConfirmationState","loadingRequestState","setLoadingRequestState","history","useHistory","handleSubmit","e","a","preventDefault","process","username","email","password","passwordConfirmation","push","className","md","lg","xl","onSubmit","name","type","placeholder","autoComplete","onChange","value","target","required","minLength","pattern","col","to","color","disabled","onClick","currentTarget","form","classList","add"],"mappings":"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","file":"static/js/13.2f9b2055.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const request = ({ method, endpoint, params }) => {\r\n  \r\n  const response = axios[method](endpoint, params)\r\n  \r\n  toast.promise(\r\n    response,\r\n    {\r\n      pending: 'Aguardando resposta.',\r\n      success: 'Tudo certo! ðŸ‘Œ',\r\n      error: 'Ops, algo deu errado. ðŸ¤¯'\r\n    }\r\n  )\r\n\r\n  return response\r\n    .then(response => response)\r\n    .catch(error => error.response)\r\n}","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  // CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { request } from '../../services/request'\n\nconst Register = () => {\n\n  const [usernameState, setUsernameState] = useState(\"\")\n  const [emailState, setEmailState] = useState(\"\")\n  const [passwordState, setPasswordState] = useState(\"\")\n  const [passwordConfirmationState, setPasswordConfirmationState] = useState(\"\")\n  const [loadingRequestState, setLoadingRequestState] = useState(false)\n  const history = useHistory()\n\n  const handleValidate = (e) => {\n\n    const $form = e.currentTarget.form;\n    $form.classList.add(\"was-validated\");\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    \n    setLoadingRequestState(true)\n\n    const response = await request({ \n      method: \"post\", \n      endpoint: `${process.env.REACT_APP_BASE_API_URL}register`,\n      params: {\n        username: usernameState,\n        email: emailState,\n        password: passwordState,\n        passwordConfirmation: passwordConfirmationState,\n      }\n    })\n\n    if (response || true) {\n      history.push(\"/dashboard\")\n    }\n\n    setLoadingRequestState(false)\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm onSubmit={handleSubmit}>\n                  <h1>Cadastrar</h1>\n                  <p className=\"text-muted\">Cria sua conta</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Nome\" autoComplete=\"username\" onChange={({ target: { value } }) => setUsernameState(value) } value={usernameState} required />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Email\" autoComplete=\"email\" onChange={({ target: { value } }) => setEmailState(value) } value={emailState} required />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"password\" placeholder=\"Senha\" autoComplete=\"new-password\" onChange={({ target: { value } }) => setPasswordState(value) } value={passwordState} minLength=\"6\" required />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"password\" placeholder=\"Confirmar senha\" autoComplete=\"new-password\" onChange={({ target: { value } }) => setPasswordConfirmationState(value) } value={passwordConfirmationState} minLength=\"6\" pattern={passwordState} required />\n                  </CInputGroup>\n                  <CRow>\n                    <CCol col=\"6\">\n                      <Link to=\"/login\">\n                        <CButton color=\"link\">Voltar</CButton>\n                      </Link>\n                    </CCol>\n                    <CCol col=\"6\" className=\"text-right\">\n                      <CButton color=\"success\" className={loadingRequestState ? \"loading\" : \"\"} type=\"submit\" disabled={loadingRequestState} onClick={handleValidate}>Criar conta</CButton>\n                    </CCol>\n                  </CRow>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n"],"sourceRoot":""}