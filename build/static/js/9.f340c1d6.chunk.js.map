{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","smartcare/hooks/useDimension.js","smartcare/components/canvas/Canvas.js","smartcare/pages/actuator/Actuator.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","ORIGIN","freeze","width","height","Canvas","refWrapper","useRef","refCanvas","ref","useState","dimensionState","setDimensionState","setDimension","useCallback","current","dimension","getBoundingClientRect","window","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","useDimension","refWrapperDimension","className","Actuator","modalActionVisibleState","setModalActionVisibleState","modalUpdateVisibleState","setModalUpdateVisibleState","modalDeleteVisibleState","setModalDeleteVisibleState","modalTriggerVisibleState","setModalTriggerVisibleState","centered","show","onClose","color","onClick","onSubmit"],"mappings":"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","file":"static/js/9.f340c1d6.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst ORIGIN = Object.freeze({\r\n  width: 0,\r\n  height: 0,\r\n});\r\n\r\nexport const useDimension = (ref) => {\r\n\r\n  const [dimensionState, setDimensionState] = useState(ORIGIN);\r\n\r\n  const setDimension = useCallback(() => {\r\n    setDimensionState(() => {\r\n      if (ref && ref.current) {\r\n        const divRef = ref.current;\r\n        const dimension = divRef.getBoundingClientRect();\r\n        \r\n        return {\r\n          width: dimension.width,\r\n          height: dimension.height,\r\n        }\r\n      }\r\n\r\n      return {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      }\r\n    });\r\n  }, [ref]);\r\n\r\n  useEffect(() => {\r\n\r\n    setDimension();\r\n    window.addEventListener('resize', setDimension);\r\n\r\n    return (() => {\r\n      window.removeEventListener('resize', setDimension);\r\n    });\r\n\r\n  }, [setDimension]);\r\n\r\n  return [dimensionState];\r\n}","import React, { useRef } from 'react'\r\nimport './styles.scss'\r\nimport { useDimension } from '../../hooks/useDimension'\r\n\r\nconst Canvas = () => {\r\n\r\n  const refWrapper = useRef()\r\n  const refCanvas = useRef()\r\n  const [refWrapperDimension] = useDimension(refWrapper)\r\n\r\n  return (\r\n    <div className=\"smtc-canvas\">\r\n      <div className=\"smtc-canvas-wrapper\" ref={refWrapper}>\r\n        <canvas\r\n          width={refWrapperDimension.width}\r\n          height={refWrapperDimension.height}\r\n          ref={refCanvas}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Canvas","import React, { useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CForm,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from '@coreui/react'\r\nimport './styles.scss'\r\nimport Canvas from '../../components/canvas/Canvas'\r\n\r\nconst Actuator = () => {\r\n\r\n  const [modalActionVisibleState, setModalActionVisibleState] = useState(false)\r\n  const [modalUpdateVisibleState, setModalUpdateVisibleState] = useState(false)\r\n  const [modalDeleteVisibleState, setModalDeleteVisibleState] = useState(false)\r\n  const [modalTriggerVisibleState, setModalTriggerVisibleState] = useState(false)\r\n  \r\n  return (\r\n    <div className=\"smtc-floor-plan\">\r\n      <div className=\"smtc-floor-plan-wrapper\">\r\n        <div className=\"smtc-floor-plan-body\">\r\n          <Canvas />\r\n        </div>\r\n      </div>\r\n      <CModal centered={true} show={modalActionVisibleState} onClose={() => setModalActionVisibleState(false)}>\r\n        <CModalHeader>\r\n          <CModalTitle>Escolha a ação desejada!</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          Por favor, escolha uma ação abaixo para dar continuidade.\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setModalActionVisibleState(false)}>\r\n            Cancelar\r\n          </CButton>\r\n          <CButton color=\"primary\">Atualizar</CButton>\r\n          <CButton color=\"warning\">Acionar</CButton>\r\n          <CButton color=\"danger\" onClick={() => {\r\n            setModalDeleteVisibleState(true)\r\n            setModalActionVisibleState(false)\r\n          }}>Deletar</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal centered={true} show={modalUpdateVisibleState} onClose={() => {\r\n        setModalUpdateVisibleState(false) \r\n        setModalActionVisibleState(true)\r\n      }}>\r\n        <CForm onSubmit={() => {}}>\r\n          <CModalHeader>\r\n            <CModalTitle>Escolha a ação desejada!</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            Adicionar formulário\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => {\r\n              setModalUpdateVisibleState(false) \r\n              setModalActionVisibleState(true)\r\n            }}>\r\n              Cancelar\r\n            </CButton>\r\n            <CButton color=\"primary\">Atualizar</CButton>\r\n          </CModalFooter>\r\n        </CForm>\r\n      </CModal>\r\n      <CModal centered={true} show={modalDeleteVisibleState} onClose={() => {\r\n        setModalDeleteVisibleState(false)\r\n        setModalActionVisibleState(true)\r\n      }}>\r\n        <CModalHeader>\r\n          <CModalTitle>Tem certeza?</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          Ao confirmar a ação, o atuador será excluído do sistema.\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => {\r\n            setModalDeleteVisibleState(false)\r\n            setModalActionVisibleState(true)\r\n          }}>\r\n            Fechar\r\n          </CButton>\r\n          <CButton color=\"primary\">Confirmar</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal centered={true} show={modalTriggerVisibleState} onClose={() => {\r\n        setModalTriggerVisibleState(false)\r\n        setModalActionVisibleState(true)\r\n      }}>\r\n        <CModalHeader>\r\n          <CModalTitle>Tem certeza?</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          Ao confirmar a ação, o atuador será acionado.\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => {\r\n            setModalTriggerVisibleState(false)\r\n            setModalActionVisibleState(true)\r\n          }}>\r\n            Fechar\r\n          </CButton>\r\n          <CButton color=\"primary\">Confirmar</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Actuator"],"sourceRoot":""}