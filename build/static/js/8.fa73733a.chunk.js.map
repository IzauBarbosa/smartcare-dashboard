{"version":3,"sources":["smartcare/services/request.js","smartcare/hooks/useDimension.js","smartcare/components/canvas/Canvas.js","smartcare/components/inputDatePicker/InputDatePicker.js","smartcare/pages/monitoring/Monitoring.js"],"names":["request","method","endpoint","params","response","axios","toast","promise","pending","success","error","then","catch","ORIGIN","Object","freeze","width","height","Canvas","refWrapper","useRef","refCanvas","ref","useState","dimensionState","setDimensionState","setDimension","useCallback","current","dimension","getBoundingClientRect","window","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","useDimension","refWrapperDimension","className","InputDatePicker","showTimeSelect","label","value","onChange","disabled","registerLocale","ptBR","locale","selected","dateFormat","date","NOW","Date","Monitoring","loadingRequestState","setLoadingRequestState","fromRecordState","setFromRecordState","toRecordState","setToRecordState","handleRequest","a","invalidDate","moment","isAfter","isBefore","process","fromRecord","toRecord","console","log"],"mappings":"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","file":"static/js/8.fa73733a.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const request = ({ method, endpoint, params }) => {\r\n  \r\n  const response = axios[method](endpoint, params)\r\n  \r\n  toast.promise(\r\n    response,\r\n    {\r\n      pending: 'Aguardando resposta.',\r\n      success: 'Tudo certo! üëå',\r\n      error: 'Ops, algo deu errado. ü§Ø'\r\n    }\r\n  )\r\n\r\n  return response\r\n    .then(response => response)\r\n    .catch(error => error.response)\r\n}","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst ORIGIN = Object.freeze({\r\n  width: 0,\r\n  height: 0,\r\n});\r\n\r\nexport const useDimension = (ref) => {\r\n\r\n  const [dimensionState, setDimensionState] = useState(ORIGIN);\r\n\r\n  const setDimension = useCallback(() => {\r\n    setDimensionState(() => {\r\n      if (ref && ref.current) {\r\n        const divRef = ref.current;\r\n        const dimension = divRef.getBoundingClientRect();\r\n        \r\n        return {\r\n          width: dimension.width,\r\n          height: dimension.height,\r\n        }\r\n      }\r\n\r\n      return {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      }\r\n    });\r\n  }, [ref]);\r\n\r\n  useEffect(() => {\r\n\r\n    setDimension();\r\n    window.addEventListener('resize', setDimension);\r\n\r\n    return (() => {\r\n      window.removeEventListener('resize', setDimension);\r\n    });\r\n\r\n  }, [setDimension]);\r\n\r\n  return [dimensionState];\r\n}","import React, { useRef } from 'react'\r\nimport './styles.scss'\r\nimport { useDimension } from '../../hooks/useDimension'\r\n\r\nconst Canvas = () => {\r\n\r\n  const refWrapper = useRef()\r\n  const refCanvas = useRef()\r\n  const [refWrapperDimension] = useDimension(refWrapper)\r\n\r\n  return (\r\n    <div className=\"smtc-canvas\">\r\n      <div className=\"smtc-canvas-wrapper\" ref={refWrapper}>\r\n        <canvas\r\n          width={refWrapperDimension.width}\r\n          height={refWrapperDimension.height}\r\n          ref={refCanvas}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Canvas","import React, { useEffect } from 'react'\r\nimport DatePicker, { registerLocale } from \"react-datepicker\"\r\nimport ptBR from 'date-fns/locale/pt-BR'\r\nimport './styles.scss'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n\r\nconst InputDatePicker = ({ showTimeSelect, label, value, onChange, disabled }) => {\r\n\r\n  useEffect(() => {\r\n    registerLocale('pt-br', ptBR);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"smtc-datepicker\">\r\n      <span className=\"date-label\">{label}</span>\r\n      <DatePicker showTimeSelect locale=\"pt-br\" selected={value} dateFormat=\"dd/MM/yyyy\" onChange={(date) => onChange(date)} disabled={!!disabled} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputDatePicker","import React, { useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport moment from 'moment'\r\nimport './styles.scss'\r\nimport InputDatePicker from '../../components/inputDatePicker/InputDatePicker'\r\nimport Canvas from '../../components/canvas/Canvas'\r\nimport { request } from '../../services/request'\r\n\r\nconst NOW = new Date();\r\nconst Monitoring = () => {\r\n  \r\n  const [loadingRequestState, setLoadingRequestState] = useState(false)\r\n  const [fromRecordState, setFromRecordState] = useState();\r\n  const [toRecordState, setToRecordState] = useState(NOW);\r\n\r\n  useEffect(() => {\r\n    \r\n    const handleRequest = async () => {\r\n\r\n      setLoadingRequestState(true);\r\n      let invalidDate = false;\r\n  \r\n      if (moment(fromRecordState).isAfter(toRecordState)) {\r\n        invalidDate = true\r\n        toast.error(\"A data de in√≠cio n√£o pode ser maior que a data final\");\r\n      }\r\n      \r\n      if (moment(toRecordState).isBefore(fromRecordState)) {\r\n        invalidDate = true\r\n        toast.error(\"A data final n√£o pode ser menor que a data de in√≠cio\");\r\n      }\r\n\r\n      if (moment(toRecordState).isAfter(NOW)) {\r\n        invalidDate = true\r\n        toast.error(\"A data final n√£o pode ser maior que agora\");\r\n      }\r\n      \r\n      if (!invalidDate) {  \r\n        const response = await request({ \r\n          method: \"post\", \r\n          endpoint: `${process.env.REACT_APP_BASE_API_URL}register`,\r\n          params: {\r\n            fromRecord: fromRecordState,\r\n            toRecord: toRecordState\r\n          }\r\n        })\r\n    \r\n        if (response) {\r\n          console.log(response)\r\n        }\r\n      }\r\n      \r\n      setLoadingRequestState(false);\r\n    }\r\n\r\n    if (fromRecordState && toRecordState) {\r\n      handleRequest();\r\n    }\r\n\r\n  }, [fromRecordState, toRecordState]);\r\n\r\n  return (\r\n    <div className=\"smtc-monitoring\">\r\n      <div className=\"smtc-monitoring-wrapper\">\r\n        <div className=\"smtc-monitoring-header\">\r\n          <div className=\"smtc-header-controls\">\r\n            <InputDatePicker showTimeSelect label=\"Data inicial\" value={fromRecordState} onChange={ setFromRecordState } disabled={loadingRequestState} />\r\n            <InputDatePicker showTimeSelect label=\"Data final\" value={toRecordState} onChange={ setToRecordState } disabled={loadingRequestState} />\r\n          </div>\r\n        </div>\r\n        <div className=\"smtc-monitoring-body\">\r\n          <Canvas />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Monitoring"],"sourceRoot":""}