{"version":3,"sources":["routes.js","smartcare/components/dashboard/routes.js","smartcare/components/dashboard/Dashboard.js"],"names":["routes","path","name","component","React","lazy","_tag","_children","to","loading","className","Dashboard","dispatch","useDispatch","useSelector","user","handleLogout","e","preventDefault","type","undefined","TheSidebar","show","state","sidebarShow","onShowChange","val","items","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheHeader","withSubheader","inHeader","onClick","includes","href","target","TheContent","fluid","fallback","mainRoutes","map","route","idx","exact","render","props","from","TheFooter","fixed"],"mappings":"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","file":"static/js/16.40a41080.chunk.js","sourcesContent":["import React from 'react';\n\n// const Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\n// const Tables = React.lazy(() => import('./views/base/tables/Tables'));\n\n// const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\n// const Cards = React.lazy(() => import('./views/base/cards/Cards'));\n// const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\n// const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\n// const BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\n\n// const Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\n// const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\n// const Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\n// const Navs = React.lazy(() => import('./views/base/navs/Navs'));\n// const Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\n// const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\n// const ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\n// const Switches = React.lazy(() => import('./views/base/switches/Switches'));\n\n// const Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\n// const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\n// const BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\n// const ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\n// const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\n// const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\n// const Charts = React.lazy(() => import('./views/charts/Charts'));\n// const Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\n// const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\n// const Flags = React.lazy(() => import('./views/icons/flags/Flags'));\n// const Brands = React.lazy(() => import('./views/icons/brands/Brands'));\n// const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\n// const Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\n// const Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'));\n// const Typography = React.lazy(() => import('./views/theme/typography/Typography'));\n// const Widgets = React.lazy(() => import('./views/widgets/Widgets'));\n// const Users = React.lazy(() => import('./views/users/Users'));\n// const User = React.lazy(() => import('./views/users/User'));\n\n// SmartCare\nconst Report = React.lazy(() => import('./smartcare/pages/report/Report'));\nconst Monitoring = React.lazy(() => import('./smartcare/pages/monitoring/Monitoring'));\nconst FloorPlan = React.lazy(() => import('./smartcare/pages/floorPlan/FloorPlan'));\nconst Sensor = React.lazy(() => import('./smartcare/pages/sensor/Sensor'));\nconst Actuator = React.lazy(() => import('./smartcare/pages/actuator/Actuator'));\n// / SmartCare\n\nconst routes = [\n  // { path: '/', exact: true, name: 'Home' },\n  // { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  // { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  // { path: '/theme/colors', name: 'Colors', component: Colors },\n  // { path: '/theme/typography', name: 'Typography', component: Typography },\n  // { path: '/base', name: 'Base', component: Cards, exact: true },\n  // { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  // { path: '/base/cards', name: 'Cards', component: Cards },\n  // { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  // { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  // { path: '/base/forms', name: 'Forms', component: BasicForms },\n  // { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  // { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  // { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  // { path: '/base/navs', name: 'Navs', component: Navs },\n  // { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  // { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  // { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  // { path: '/base/switches', name: 'Switches', component: Switches },\n  // { path: '/base/tables', name: 'Tables', component: Tables },\n  // { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  // { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  // { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  // { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  // { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\n  // { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  // { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  // { path: '/charts', name: 'Charts', component: Charts },\n  // { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  // { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  // { path: '/icons/flags', name: 'Flags', component: Flags },\n  // { path: '/icons/brands', name: 'Brands', component: Brands },\n  // { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  // { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  // { path: '/notifications/badges', name: 'Badges', component: Badges },\n  // { path: '/notifications/modals', name: 'Modals', component: Modals },\n  // { path: '/notifications/toaster', name: 'Toaster', component: Toaster },\n  // { path: '/widgets', name: 'Widgets', component: Widgets },\n  // { path: '/users', exact: true,  name: 'Users', component: Users },\n  // { path: '/users/:id', exact: true, name: 'User Details', component: User },\n  // SmartCare\n  { path: '/dashboard/report', name: 'Report', component: Report },\n  { path: '/dashboard/monitoring', name: 'Monitoring', component: Monitoring },\n  { path: '/dashboard/floor_plan', name: 'Floor Plan', component: FloorPlan },\n  { path: '/dashboard/sensor', name: 'Sensor', component: Sensor },\n  { path: '/dashboard/actuator', name: 'Actuator', component: Actuator },\n  // / SmartCare\n];\n\nexport default routes;\n","export const routes = [\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Dashboard']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Relat√≥rios',\r\n    to: '/dashboard/report',\r\n    // icon: \" \",\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Monitoramento',\r\n    to: '/dashboard/monitoring',\r\n    // icon: \" \",\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Configura√ß√µes']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Planta baixa',\r\n    to: '/dashboard/floor_plan',\r\n    // icon: \" \",\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Sensores',\r\n    to: '/dashboard/sensor',\r\n    // icon: \" \",\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Atuadores',\r\n    to: '/dashboard/actuator',\r\n    // icon: \" \",\r\n  }\r\n]","import React, { Suspense } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CFooter,\r\n  CContainer, \r\n  CFade,\r\n} from '@coreui/react'\r\n\r\nimport mainRoutes from '../../../routes'\r\nimport { routes } from './routes'\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  // Check user logged\r\n  const user = useSelector(({ user }) => user)\r\n  if (!user) {\r\n    return (\r\n      <Redirect to=\"/\" />\r\n    )\r\n  }\r\n  // / Check user logged\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({ type: 'set', user: undefined })\r\n  }\r\n\r\n  const TheSidebar = () => {\r\n    const show = useSelector(state => state.sidebarShow)\r\n  \r\n    return (\r\n      <CSidebar\r\n        show={show}\r\n        onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\r\n      >\r\n        <CSidebarBrand className=\"d-md-down-none\" to=\"/dashboard/report\">\r\n          <strong>SMARTCARE</strong>\r\n        </CSidebarBrand>\r\n        <CSidebarNav>\r\n  \r\n          <CCreateElement\r\n            items={routes}\r\n            components={{\r\n              CSidebarNavDivider,\r\n              CSidebarNavDropdown,\r\n              CSidebarNavItem,\r\n              CSidebarNavTitle\r\n            }}\r\n          />\r\n        </CSidebarNav>\r\n      </CSidebar>\r\n    )\r\n  }\r\n\r\n  const TheHeader = () => {\r\n    const dispatch = useDispatch()\r\n    const sidebarShow = useSelector(state => state.sidebarShow)\r\n  \r\n    const toggleSidebar = () => {\r\n      const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n      dispatch({type: 'set', sidebarShow: val})\r\n    }\r\n  \r\n    const toggleSidebarMobile = () => {\r\n      const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n      dispatch({type: 'set', sidebarShow: val})\r\n    }\r\n  \r\n    return (\r\n      <CHeader withSubheader>\r\n        <CToggler\r\n          inHeader\r\n          className=\"ml-md-3 d-lg-none\"\r\n          onClick={toggleSidebarMobile}\r\n        />\r\n        <CToggler\r\n          inHeader\r\n          className=\"ml-3 d-md-down-none\"\r\n          onClick={toggleSidebar}\r\n        />\r\n        <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n          <strong>SMARTCARE</strong>\r\n        </CHeaderBrand>\r\n  \r\n        <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n          <CHeaderNavItem className=\"px-3\" >\r\n            <CHeaderNavLink href=\"https://raphael-abreu.github.io/projects/smartCare/\" target=\"_blank\">Documenta√ß√£o</CHeaderNavLink>\r\n          </CHeaderNavItem>\r\n          <CHeaderNavItem className=\"px-3\" >\r\n            <CHeaderNavLink onClick={handleLogout}>Sair</CHeaderNavLink>\r\n          </CHeaderNavItem>\r\n        </CHeaderNav>\r\n      </CHeader>\r\n    )\r\n  }\r\n\r\n  const TheContent = () => {\r\n    return (\r\n      <main className=\"c-main\">\r\n        <CContainer fluid>\r\n          <Suspense fallback={loading}>\r\n            <Switch>\r\n              {mainRoutes.map((route, idx) => {\r\n                return route.component && (\r\n                  <Route\r\n                    key={idx}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    name={route.name}\r\n                    render={props => (\r\n                      <CFade>\r\n                        <route.component {...props} />\r\n                      </CFade>\r\n                    )} />\r\n                )\r\n              })}\r\n              <Redirect from=\"/\" to=\"/dashboard/report\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </CContainer>\r\n      </main>\r\n    )\r\n  }\r\n\r\n  const TheFooter = () => {\r\n    return (\r\n      <CFooter fixed={false}>\r\n        <div className=\"mfs-auto\">\r\n          <span className=\"mr-1\">&nbsp;&nbsp;&nbsp;&copy; 2021 TCC Iza√∫ Barbosa.</span>\r\n        </div>\r\n      </CFooter>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar/>\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader/>\r\n        <div className=\"c-body\">\r\n          <TheContent/>\r\n        </div>\r\n        <TheFooter/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"sourceRoot":""}